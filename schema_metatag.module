<?php

/**
 * @file
 * Primary hook implementations for Schema.org Metatag.
 */

 /**
  * Implements hook_autoload_info().
  */
function schema_metatag_autoload_info() {
  return array(
    'SchemaMetatagManager' => 'src/SchemaMetatagManager.php',
    'SchemaMetatagManagerInterface' => 'src/SchemaMetatagManagerInterface.php',
    'SchemaMetatagTestTagInterface' => 'src/SchemaMetatagTestTagInterface.php',
    'SchemaNameBase' => 'src/SchemaNameBase.php',
    'SchemaAddressBase' => 'src/SchemaAddressBase.php',
    'SchemaAddressTrait' => 'src/SchemaAddressTrait.php',
    'SchemaDateBase' => 'src/SchemaDateBase.php',
    'SchemaDurationBase' => 'src/SchemaDurationBase.php',
    'SchemaIsAccessibleForFreeBase' => 'src/SchemaIsAccessibleForFreeBase.php',
    'SchemaItemListElementBase' => 'src/SchemaItemListElementBase.php',
    'SchemaItemListElementBreadcrumbBase' => 'src/SchemaItemListElementBreadcrumbBase.php',
    'SchemaItemListElementViewsBase' => 'src/SchemaItemListElementViewsBase.php',
    'SchemaPersonOrgBase' => 'src/SchemaPersonOrgBase.php',
    'SchemaPersonOrgTrait' => 'src/SchemaPersonOrgTrait.php',
    'SchemaGeoBase' => 'src/SchemaGeoBase.php',
    'SchemaGeoTrait' => 'src/SchemaGeoTrait.php',
    'SchemaIdReferenceBase' => 'src/SchemaIdReferenceBase.php',
    'SchemaIdReferenceTrait' => 'src/SchemaIdReferenceTrait.php',
    'SchemaImageBase' => 'src/SchemaImageBase.php',
    'SchemaImageTrait' => 'src/SchemaImageTrait.php',
    'SchemaOfferBase' => 'src/SchemaOfferBase.php',
    'SchemaOfferTrait' => 'src/SchemaOfferTrait.php',
    'SchemaRatingBase' => 'src/SchemaRatingBase.php',
    'SchemaRatingTrait' => 'src/SchemaRatingTrait.php',
    'SchemaReviewBase' => 'src/SchemaReviewBase.php',
    'SchemaReviewTrait' => 'src/SchemaReviewTrait.php',
    'SchemaPivotTrait' => 'src/SchemaPivotTrait.php',
    'SchemaUrlBase' => 'src/SchemaUrlBase.php',
    'SchemaMainEntityOfPageBase' => 'src/SchemaMainEntityOfPageBase.php',
    'SchemaTypeBase' => 'src/SchemaTypeBase.php',
    'SchemaItemListBase' => 'src/SchemaItemListBase.php',
    'SchemaActionBase' => 'src/SchemaActionBase.php',
    'SchemaActionTrait' => 'src/SchemaActionTrait.php',
    'SchemaCountryBase' => 'src/SchemaCountryBase.php',
    'SchemaCountryTrait' => 'src/SchemaCountryTrait.php',
    'SchemaCreativeWorkBase' => 'src/SchemaCreativeWorkBase.php',
    'SchemaCreativeWorkTrait' => 'src/SchemaCreativeWorkTrait.php',
    'SchemaEntryPointBase' => 'src/SchemaEntryPointBase.php',
    'SchemaEntryPointTrait' => 'src/SchemaEntryPointTrait.php',
    'SchemaEventBase' => 'src/SchemaEventBase.php',
    'SchemaEventTrait' => 'src/SchemaEventTrait.php',
    'SchemaGovernmentServiceBase' => 'src/SchemaGovernmentServiceBase.php',
    'SchemaGovernmentServiceTrait' => 'src/SchemaGovernmentServiceTrait.php',
    'SchemaHasPartBase' => 'src/SchemaHasPartBase.php',
    'SchemaHasPartTrait' => 'src/SchemaHasPartTrait.php',
    'SchemaNutritionInformationBase' => 'src/SchemaNutritionInformationBase.php',
    'SchemaNutritionInformationTrait' => 'src/SchemaNutritionInformationTrait.php',
    'SchemaOpeningHoursSpecificationBase' => 'src/SchemaOpeningHoursSpecificationBase.php',
    'SchemaOpeningHoursSpecificationTrait' => 'src/SchemaOpeningHoursSpecificationTrait.php',
    'SchemaPlaceBase' => 'src/SchemaPlaceBase.php',
    'SchemaPlaceTrait' => 'src/SchemaPlaceTrait.php',
    'SchemaProgramMembershipBase' => 'src/SchemaProgramMembershipBase.php',
    'SchemaProgramMembershipTrait' => 'src/SchemaProgramMembershipTrait.php',
    'SchemaSpeakableBase' => 'src/SchemaSpeakableBase.php',
    'SchemaSpeakableTrait' => 'src/SchemaSpeakableTrait.php',
    'SchemaThingBase' => 'src/SchemaThingBase.php',
    'SchemaThingTrait' => 'src/SchemaThingTrait.php',
    'SchemaTrueFalseBase' => 'src/SchemaTrueFalseBase.php',
    'SchemaMonetaryAmountBase' => 'src/SchemaMonetaryAmountBase.php',
    'SchemaMonetaryAmountTrait' => 'src/SchemaMonetaryAmountTrait.php',
    'SchemaContactPointBase' => 'src/SchemaContactPointBase.php',
    'SchemaContactPointTrait' => 'src/SchemaContactPointTrait.php',
    'SchemaBrandBase' => 'src/SchemaBrandBase.php',
    'SchemaBrandTrait' => 'src/SchemaBrandTrait.php',
    'SchemaHowToStepBase' => 'src/SchemaHowToStepBase.php',
    'SchemaHowToStepTrait' => 'src/SchemaHowToStepTrait.php',
    'SchemaQuestionBase' => 'src/SchemaQuestionBase.php',
    'SchemaQuestionTrait' => 'src/SchemaQuestionTrait.php',
    'SchemaAnswerBase' => 'src/SchemaAnswerBase.php',
    'SchemaAnswerTrait' => 'src/SchemaAnswerTrait.php',
    // Tests.
    'SchemaMetatagTagsTestBase' => 'tests/schema_metatag.base.test',
    'SchemaMetatagTestHelper' => 'tests/schema_metatag.helper.test',
    'SchemaMetatagArticleTest' => 'schema_article/tests/SchemaMetatagArticleTest.test',
  );
}

/**
 * Implements hook_html_head_alter().
 */
function schema_metatag_html_head_alter(&$elements) {

  // Parse tags added by Schema Metatag into a structured data array.
  $items = SchemaMetatagManager::parseJsonld($elements);

  // Turn the structured data array into JSON LD and add it to page head.
  if (count($items) > 0) {
    // Json_encode the results.
    $jsonld = SchemaMetatagManager::encodeJsonld($items);
    if (!empty($jsonld)) {
      // Add the render array to the page head elements.
      $elements['schema_metatag'] = SchemaMetatagManager::renderArrayJsonLd($jsonld);
    }
  }
}

/**
 * Validation callback for a schema_metatag element to serialize nested arrays.
 */
function schema_metatag_element_validate($element, &$form_state, $form) {
  // For values that are not string values but instead nested arrays,
  // serialize the results into a single string value.
  $keys = $element['#array_parents'];
  if (count($keys) >= 4) {
    if (isset($form_state['values'][$keys[0]][$keys[1]][$keys[3]][$keys[4]])) {
      $value = $form_state['values'][$keys[0]][$keys[1]][$keys[3]][$keys[4]];
      if (is_array($value)) {
        $value = SchemaMetatagManager::serialize($value);
        form_set_value($element, $value, $form_state);
      }
    }
  }
}
